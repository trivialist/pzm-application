/*
 * ClickTermWindow.java
 *
 * Created on 16. Februar 2006, 10:49
 */

package pzm.gui;


import pzm.tablemodel.TermEditTableModel;
import pzm.dialog.DeleteTermDialog;
import pzm.core.Project;
import pzm.core.Term;
import pzm.core.User;
import java.util.Calendar;
import java.util.StringTokenizer;

/**
 *
 * @author  hertel
 */
public class TermEditGUI extends javax.swing.JFrame {
    
    private static Calendar cal;
    private static Project actProject = new Project(0, "", "", 0);
    private static User activeUser = new User("", "", "");
    private static Term actTerm = new Term(0,0,0,0);

    
    /** Creates new form ClickTermWindow */
    public TermEditGUI() {
        
    }
    
    public TermEditGUI(Term term,User user, Calendar cal,Project project) {
        this.activeUser = user;
        this.actTerm = term;
        cal.getInstance();
        this.cal = cal;
        this.actProject = project;
        initComponents();
        table.setModel(new TermEditTableModel(activeUser.getUserID(), cal));
        jLabelError.setVisible(false);
        jLabelDate.setText(cal.get(cal.DATE) + "." + (cal.get(cal.MONTH) + 1) + "."
                           + cal.get(cal.YEAR));
        jLabelID.setText(String.valueOf(activeUser.getUserID()));
        jLabelUser.setText(activeUser.getUserName());
        //System.out.println("ID: " + userID + ", login: " + userLogin + ", project:" + project + ", monat:" + cal.get(cal.MONTH));
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelUser = new javax.swing.JLabel();
        jLabelID = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabelDate = new javax.swing.JLabel();
        jButtonEditTerm = new javax.swing.JButton();
        jButtonDeleteTerm = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jLabelUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 110, 20));
        jPanel1.add(jLabelID, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, 20, 20));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 570, 300));

        jLabel9.setText("Vorhandene Zeiteinträge für den");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 160, -1));

        jLabelDate.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabelDate.setText("jLabel10");
        jPanel1.add(jLabelDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 120, -1));

        jButtonEditTerm.setText("Ändern");
        jButtonEditTerm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditTermActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEditTerm, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 90, -1));

        jButtonDeleteTerm.setText("Löschen");
        jButtonDeleteTerm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteTermActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonDeleteTerm, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 390, 90, -1));

        jButtonCancel.setText("Abbrechen");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 390, -1, -1));

        jLabel1.setText("ID:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, 30, 20));

        jLabel2.setText("Benutzer:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 50, 20));

        jLabelError.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabelError.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(jLabelError, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 330, 10));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEditTermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditTermActionPerformed
    if(table.getSelectedRow() != -1) {
            Object temp1 = table.getModel().getValueAt(table.getSelectedRow(), 0);
            Integer temp2 = (Integer)temp1;
            actTerm.setTermID(temp2.intValue());
            editSelectedTerm(actTerm.getTermID());
            setVisible(false);
            dispose();
        }
        else {
            jLabelError.setText("Kein Eintrag zum Ändern ausgewählt!");
            jLabelError.setVisible(true);
        }    
    }//GEN-LAST:event_jButtonEditTermActionPerformed
    
    /*
     *  @param Action Event jButtonDelete clicked
     *
     *  öffnet DeleteTermDialog um Bestätigung zum Löschen eines Zeiteintrags 
     *  abzufragen.
     *
     */
    private void jButtonDeleteTermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteTermActionPerformed
        if(table.getSelectedRow() != -1) {
            Object temp1 = table.getModel().getValueAt(table.getSelectedRow(), 0);
            Integer temp2 = (Integer)temp1;
            actTerm.setTermID(temp2.intValue());
            deleteSelectedTerm(actTerm.getTermID());
            setVisible(false);
            dispose();
        }
        else {
            jLabelError.setText("Kein Eintrag zum Löschen ausgewählt!");
            jLabelError.setVisible(true);
        }
    }//GEN-LAST:event_jButtonDeleteTermActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TermEditGUI tEditWin = new TermEditGUI(actTerm, activeUser, cal, actProject);
                tEditWin.setVisible(true);
            }
        });
    }
    
    public void deleteSelectedTerm(int termID) {
        actProject.setProject(String.valueOf(table.getModel().getValueAt(table.getSelectedRow(),  2)));
        actTerm.setDuration(((Integer)(table.getModel().getValueAt(table.getSelectedRow(), 4))).intValue());
        TermEditGUI termGUI = new TermEditGUI(actTerm, activeUser, cal, actProject);
        DeleteTermDialog deleteTermDialog = new DeleteTermDialog(termGUI, true, actTerm, actProject,
                activeUser, cal);
        deleteTermDialog.setVisible(true);
    }
    
    public void editSelectedTerm(int termID) {
        actProject.setProject(String.valueOf(table.getModel().getValueAt(table.getSelectedRow(),  2)));
        actTerm.setDuration(((Integer)((table.getModel().getValueAt(table.getSelectedRow(), 4)))).intValue());
        TermGUI termGUI = new TermGUI(0, actTerm, activeUser, cal, actProject);
        termGUI.setVisible(true);
    } 
    
    public int getMinutesOfTimeString(String duration) {
        int hours = 0;
        int minutes = 0;
        StringTokenizer tokenizer = new StringTokenizer(duration,":");
        while(tokenizer.hasMoreTokens()) {
            if(tokenizer.countTokens() == 2) {
                hours = (Integer.valueOf(tokenizer.nextToken()).intValue()) * 60;
            }
            else if(tokenizer.countTokens() == 1) {
                minutes = (Integer.valueOf(tokenizer.nextToken()).intValue());
            }
        }
        return hours + minutes;
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonDeleteTerm;
    private javax.swing.JButton jButtonEditTerm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDate;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelUser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
    
}
